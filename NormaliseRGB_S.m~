function [ normRGBImage, intesityRGBImage ] = NormaliseRGB_S( Im, vis_flag )
%NORMALISERGB_S Summary of this function goes here
%   Detailed explanation goes here

[MR,MC,Dim] = size(Im);

normRGBImage = zeros(MR,MC,Dim);
intesityRGBImage = int8(zeros(MR,MC));

RGBt = sum(double(Im),3);
%RGBtd(:,:,1)=RGBt;
%RGBtd(:,:,2)=RGBt;
%RGBtd(:,:,3)=RGBt;
RGBtd = cat(3,RGBt,RGBt,RGBt);
normRGBImaget = double(Im)./RGBtd;
intesityRGBImaget = int8(RGBt./3); 

for i=1:MR 
  for j=1:MC
      RGB = sum(Im(i,j,:));
      for k=1:3
            normRGBImage(i,j,k) = double(Im(i,j,k))/RGB; 
      end
      intesityRGBImage(i,j) = int8(RGB/3);          
  end
end

Values = 0
%isequal(normRGBImage(:,:,1),normRGBImaget(:,:,1))
A(isnan(A)) = 0 ;
sum(sum(sum(normRGBImage-normRGBImaget)))
isequal(intesityRGBImage,intesityRGBImaget)


if vis_flag > 0
    figure(vis_flag)
    clf
    %imshow(normRGBImback(:,:,:))
    imshow(intesityRGBImage)
end


end

